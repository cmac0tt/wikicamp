from wikicamp.wiki.models import Page
from django.shortcuts import render_to_response
from django.http import HttpResponseRedirect
from django.shortcuts import render
from django.shortcuts import redirect
from django import forms
import htmllib
from django.template import RequestContext, loader
from django.core.context_processors import csrf
# Create your views here.

def view_page(request, page_name):
    c = {}
    try:
     page = Page.objects.get(pk=page_name)
     content = page.content
    except Page.DoesNotExist:
        return render_to_response("create.html", {"page_name":page_name}, context_instance=RequestContext(request))
        content = page.content
        return render_to_response("view.html", {"page_name":page_name, "content":content}, context_instance=RequestContext(request))

def edit_page(request, page_name):
    c = {}
    try:
     page = Page.objects.get(pk=page_name)
     content = page.content
    except Page.DoesNotExist:
     content = ""
    return render_to_response("edit.html", {"page_name":page_name, "content":content}, context_instance=RequestContext(request))
    print()
    
def save_page(request, page_name):
    date =  datetime.date.today()
    content = request.POST["content"]
    tag_list = []
    if "tags" in request.POST:
        tags = request.POST["tags"]
        tag_list = [Tag.objects.get_or_create(name=tag)[0] for tag in tags.split()]
 
    try:
        page = Page.objects.get(pk=page_name)
        page.content = content
        for tag in tag_list:
            page.tags.add(tag)
 
    except Page.DoesNotExist:
        page = Page(name=page_name, content = content, pub_date = date)
        for tag in tag_list:
            page.tags.add(tag)
 
    page.save()
    return HttpResponseRedirect("/wikicamp/page/" + page_name +"/")

